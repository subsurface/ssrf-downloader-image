#!/bin/bash

if [ ! -f /opt/adsb/scripts/common.sh ]
then
    echo "missing /opt/adsb/scripts/common.sh -- that's generally a bad sign"
else
    . /opt/adsb/scripts/common.sh
    rootcheck
    logparent
fi

# if this is the update check at 1:30am, do the updates if configured
currenttime=$(TZ=$(grep -e "FEEDER_TZ=" /opt/adsb/config/.env | cut -d= -f2) date '+%H:%M')
if [[ "$currenttime" > "01:20" ]] && [[ "$currenttime" < "01:40" ]]; then
    # check in the .env file what we should do
    if grep -q "^AF_IS_NIGHTLY_BASE_UPDATE_ENABLED=True" config/.env ; then
        echo "$(date -u +"%FT%T.%3NZ") Nightly OS update:"
        /opt/adsb/scripts/update-os
        echo "$(date -u +"%FT%T.%3NZ") Nightly OS update: done"
    fi
    if grep "^AF_IS_NIGHTLY_FEEDER_UPDATE_ENABLED=True" config/.env ; then
        echo "$(date -u +"%FT%T.%3NZ") Nightly feeder update:"
        # just running feeder-update is unnecessary disk thrashing.
        # check instead if there is an update available
        PORT=$(grep AF_WEBPORT /opt/adsb/config/.env | cut -d= -f2)
        # if the advice is empty, we don't need to update:
        if curl -sS "http://127.0.0.1:${PORT}/api/status/im" | jq -e '.advice == ""' >/dev/null; then
            echo "$(date -u +"%FT%T.%3NZ") Nightly feeder update: no new version availabe"
        else
            bash /opt/adsb/feeder-update
            echo "$(date -u +"%FT%T.%3NZ") Nightly feeder update: done"
        fi
    fi

    if [ -f /opt/adsb/os.adsb.feeder.image ] ; then
        # as we handle OS updates above, disable the daily apt update if enabled, unnecessary disk writes
        if systemctl is-enabled apt-daily.timer &>/dev/null; then
            systemctl disable --now apt-daily.timer
        fi
    fi
fi
